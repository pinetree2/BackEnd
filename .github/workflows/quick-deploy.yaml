# 작업명
name: CD GCP

# 실행해야 할 브랜치, push가 발생한 경우로만 한정하였다.
on:
  push:
    branches:
      - "develop"
      - "main"
  pull_request:
    branches:
      - "develop"
      - "main"

jobs:
  CD:
    ## 이거 NCP ubuntu OS 가 아니라, github Actions job 실행 환경의 ubuntu OS버전이다.
    runs-on: ubuntu-latest
    env:
      RESOURCE_PATH: ./src/main/resources/application.yml
    steps:
      ## Project JDK 17 Setting
      - name: Checkout
        uses: actions/checkout@v3


      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_DEV_SERVER_IP }}
          username: ${{ secrets.DB_USERNAME }}
          password: ${{ secrets.DB_USERNAME }}
          port: ${{ secrets.PORT }}
          timeout: 40s  # 30초 기본
          script: whoami

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.DB_HOST }}
          spring.datasource.username: ${{ secrets.DB_USERNAME }}
          spring.datasource.password: ${{ secrets.DB_PASSWORD }}
          spring.cloud.gcp.credentials.location: ${{ secrets.GCP_CREDENTIALS_LOCATION }}
          spring.auth.clientId: ${{ secrets.AUTH_RESTAPI_KEY }}

      # Gradle의 사용권한 셋팅
      - name: Grant Execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      # 프로젝트 테스트 진행없이 빌드
      - name: Build with Gradle
        run: ./gradlew build -x test
        shell: bash

      # Docker 빌드 생성 및 푸시
      - name: dev Docker build & push
        if: contains(github.ref, 'main') || contains(github.ref, 'develop')

        run: |
          docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.SONG_TOKEN }}
          docker build -f Dockerfile -t ghcr.io/mangoteam3/backend/durian:${{ github.sha }} .
          docker push ghcr.io/mangoteam3/backend/durian:${{ github.sha }}
          echo "완료"

      # 개발서버 SSH접속 및 배포
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.0
        id: deploy
        if: contains(github.ref, 'main') || contains(github.ref, 'develop')

        with:
          host: ${{ secrets.GCP_DEV_SERVER_IP }}
          username: ${{ secrets.DB_USERNAME }}
          password: ${{ secrets.DB_PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.SONG_TOKEN }}
            if [ "$(docker ps -aq -f name=durian)" ]; then
            docker stop $(docker ps -aq -f name=durian)
            docker rm -f $(docker ps -aq -f name=durian)
            fi
            docker pull ghcr.io/mangoteam3/backend/durian:${{ github.sha }}
            docker run -d -p 8080:8080 --name durian ghcr.io/mangoteam3/backend/durian:${{ github.sha }}
            docker image prune -f
            

