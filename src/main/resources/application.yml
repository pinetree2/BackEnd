spring:
  datasource:
    username: ${SPRING_DATASOURCE_USERNAME}
    url: ${SPRING_DATASOURCE_URL}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate: # hibernate 사용 설정
      # 애플리케이션 실행 시점에 테이블을 다 지우고, 내가 가진 entity 정보를 보고 다시 테이블 자동 생성
      # if exists drop table 해주고 다시 만들어준다고 보면 된다.
      ddl-auto: none
    properties: # property 사용 설정
      hibernate: # hibernate property 설정
        format_sql: true

  #  profiles:
  #    include: mysql
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  sql:
    init:
      encoding: UTF-8
  cloud:
    gcp:
      storage:
        credentials:
          location: "${{ GOOGLE_APPLICATION_CREDENTIALS }}"
        project-id: poetic-inkwell-401203
        bucket: durian-storage
kakao:
  key: 3b71afcfaf0fe7f58b9e6d71ed96e5de

kakao:
  key: 3b71afcfaf0fe7f58b9e6d71ed96e5de

server:
  port: 8080
  error:
    include-message: always


jwt:
  header: Authorization
  secret : 3lXdQ+A7/YyqtnBLngwabsum7YYlqMxOi2CJy/1xsWpptuFUq+3jaA2OAwO1ub2CN97qx8u0hta61QdhtF/R5A==
  expiration : 86400


# Swagger springdoc-ui Configuration
#springdoc:
#  packages-to-scan: com.test.demo
#  default-consumes-media-type: application/json;charset=UTF-8
#  default-produces-media-type: application/json;charset=UTF-8
#  swagger-ui:
#    path: swagger-ui.html            # Swagger UI 경로 => localhost:8000/swagger-ui.html
#    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
#    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
#  api-docs:
#    path: /api-docs/json
#    groups:
#      enabled: true
#  cache:
#    disabled: true

